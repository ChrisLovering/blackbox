name: Release to PyPI

on:
  release:
    types: [ published ]

jobs:
  bump-pyproject-version:
    name: Bump pyproject version
    runs-on: ubuntu-latest

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up Python 3.9
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install Poetry
        run: pip install poetry

      - name: Bump the version
        run: poetry version ${{ github.event.release.tag_name }}

      - name: Commit changes
        uses: stefanzweifel/git-auto-commit-action@v4
        with:
          file_pattern: pyproject.toml
          commit_message: Bump version to ${{ github.event.release.tag_name }}

  publish-to-pipy:
    name: Publish to pypi.org
    runs-on: ubuntu-latest
    needs: bump-pyproject-version

    steps:
      - name: Checkout the repo.
        uses: actions/checkout@v3
        with:
          ref: main

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.9"

      - name: Install poetry
        run: pip install poetry

      - name: Install dependencies
        run: poetry install

      - name: Build and publish to pypi
        run: |
          poetry config pypi-token.pypi ${{ secrets.PYPI_TOKEN }} &&
          poetry publish --build

  build-and-push-on-release:
    name: Build and push to DockerHub
    runs-on: ubuntu-latest
    needs: publish-to-pipy

    steps:
      # Check out the current repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Set up Docker Buildx and log into DockerHub
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN  }}

      # Build and push the container to the GitHub Container
      - name: Build and push
        uses: docker/build-push-action@v3
        with:
          context: .
          file: ./docker/Dockerfile
          push: true
          cache-from: type=registry,ref=lemonsaurus/blackbox:latest
          cache-to: type=inline
          tags: |
            lemonsaurus/blackbox:latest
            lemonsaurus/blackbox:${{ github.event.release.tag_name }}
